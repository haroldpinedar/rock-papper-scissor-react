{"version":3,"sources":["score.js","header.js","wrapper.js","token.js","table.js","button.js","rules.js","App.js","serviceWorker.js","index.js"],"names":["ScoreStyled","styled","div","Score","HeaderStyled","Header","WrapperStyled","Wrapper","children","TokenStyled","color","base","border","colors","paper","rock","scissors","Token","name","className","src","alt","TableStyled","Table","ButtonStyled","Button","props","RulesStyled","Rules","useState","visible","setVisible","handleToggleClick","onClick","AppStyled","main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wzBAGA,IAAMA,EAAcC,IAAOC,IAAV,KAkCFC,MATf,WACI,OACI,kBAACH,EAAD,KACI,wCACA,oC,iYC5BZ,IAAMI,EAAeH,IAAOC,IAAV,KA4BHG,MAZf,WACE,OACE,kBAACD,EAAD,KACE,oCACO,6BADP,SAEQ,6BAFR,aAIA,kBAAC,EAAD,Q,8GCxBN,IAAME,EAAgBL,IAAOC,IAAV,KASJK,MAJf,YAAgC,IAAbC,EAAY,EAAZA,SACjB,OAAO,kBAACF,EAAD,KAAgBE,I,miBCNzB,IAAMC,EAAcR,IAAOC,IAAV,KAGM,qBAAGQ,MAAkBC,QAKpB,qBAAGD,MAAkBE,UAiBvCC,EAAS,CACbC,MAAO,CACLH,KAAM,UACNC,OAAQ,WAEVG,KAAM,CACJJ,KAAM,UACNC,OAAQ,WAEVI,SAAU,CACRL,KAAM,UACNC,OAAQ,YAcGK,MAVf,YAA0B,IAATC,EAAQ,EAARA,KACf,OACE,kBAACT,EAAD,CAAaC,MAAOG,EAAOK,IACzB,yBAAKC,UAAU,OACb,yBAAKC,IAAG,wBAAmBF,EAAnB,QAA+BG,IAAI,Q,i6BC3CnD,IAAMC,EAAcrB,IAAOC,IAAV,KAqDFqB,MAXf,WACE,OACE,kBAACD,EAAD,KACE,0BAAMH,UAAU,SAChB,kBAAC,EAAD,CAAOD,KAAK,SACZ,kBAAC,EAAD,CAAOA,KAAK,aACZ,kBAAC,EAAD,CAAOA,KAAK,Y,2UCjDlB,IAAMM,EAAevB,IAAOC,IAAV,KAiBHuB,MAJf,YAA+B,IAAVC,EAAS,oBAC5B,OAAO,kBAACF,EAAiBE,EAAlB,U,gnBCbT,IAAMC,EAAc1B,IAAOC,IAAV,KAsDF0B,MAzBf,WAAkB,IAAD,EACeC,oBAAS,GADxB,mBACRC,EADQ,KACCC,EADD,KAGf,SAASC,IACPD,GAAYD,GAEd,OACE,kBAACH,EAAD,KACGG,GACC,yBAAKX,UAAU,iBACb,qCACA,yBAAKC,IAAI,2BAA2BC,IAAI,kBACxC,yBACEF,UAAU,eACVc,QAASD,EACTZ,IAAI,0BACJC,IAAI,oBAIV,kBAAC,EAAD,CAAQY,QAASD,M,maC7CvB,IAAME,EAAYjC,IAAOkC,KAAV,KA8BAC,MAdf,WACE,OACE,kBAACF,EAAD,KACE,kBAAC,EAAD,KACE,yBAAKf,UAAU,eACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UCnBUkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8ed2aabd.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst ScoreStyled = styled.div`\n    background: white;\n    text-align: center;\n    padding: 10px 0;\n    border-radius:8px;\n    width: 80px;\n    small {\n        color: #2A45C2;\n        text-transform: uppercase;\n        font-size: 10px;\n        font-weight: bold;\n    }\n    p {\n        color: #565458;\n        font-size: 40px;\n        margin: 0;\n        font-weght: 700;\n        font-family: Arial;\n        letter-spacing: -5px;\n        position: relative;\n        left: -2px;\n    }\n\n`\n\nfunction Score () {\n    return(\n        <ScoreStyled>\n            <small>Score</small>\n            <p>731</p>\n        </ScoreStyled>\n    )\n}\n\nexport default Score;\n    ","import React from \"react\";\nimport styled from \"styled-components\";\nimport Score from \"./score\";\n\nconst HeaderStyled = styled.div`\n  color: white;\n  padding: 12px 12px 12px 23px;\n  border-radius: 0.5em;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 3px solid rgba(255, 255, 255, 0.29);\n  h1 {\n    font-size: 18px;\n    line-height: 16px;\n    font-weight: 700;\n    text-transform: uppercase;\n  }\n`;\n\nfunction Header() {\n  return (\n    <HeaderStyled>\n      <h1>\n        Rock <br />\n        Paper <br /> Scissors\n      </h1>\n      <Score />\n    </HeaderStyled>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst WrapperStyled = styled.div`\n  max-width: 1024px;\n  margin: auto;\n`;\n\nfunction Wrapper({ children }) {\n  return <WrapperStyled>{children}</WrapperStyled>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TokenStyled = styled.div`\n  width: 130px;\n  height: 125px;\n  border: 16px solid ${({ color }) => color.base};\n  box-sizing: border-box;\n  border-radius: 50%;\n  display: flex;\n  background: white;\n  box-shadow: 0 5px 0 ${({ color }) => color.border};\n  cursor: pointer;\n  position: relative;\n  z-index: 2;\n  &:active {\n    transform: scale(0.9);\n  }\n  .box {\n    box-shadow: 0 -4px 0 #babfd4;\n    flex: 1;\n    align-self: stretch;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\nconst colors = {\n  paper: {\n    base: \"#516ef4\",\n    border: \"#2543c3\",\n  },\n  rock: {\n    base: \"#de3a5a\",\n    border: \"#980e31\",\n  },\n  scissors: {\n    base: \"#eca81e\",\n    border: \"#c76c14\",\n  },\n};\n\nfunction Token({ name }) {\n  return (\n    <TokenStyled color={colors[name]}>\n      <div className=\"box\">\n        <img src={`./images/icon-${name}.svg`} alt=\"\" />\n      </div>\n    </TokenStyled>\n  );\n}\n\nexport default Token;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Token from \"./token\";\n\nconst TableStyled = styled.div`\n  display: grid;\n  grid-template-columns: 130px 130px;\n  justify-content: center;\n  justify-items: center;\n  grid-gap: 30px 50px;\n  margin: 2em 0;\n  position: relative;\n  & div:nth-of-type(3) {\n    grid-column: span 2;\n  }\n  .line {\n    height: 14px;\n    background: rgba(0, 0, 0, 0.2);\n    position: absolute;\n    width: 200px;\n    top: 58px;\n    &:before {\n      content: \"\";\n      height: 14px;\n      background: rgba(0, 0, 0, 0.2);\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      transform: rotate(60deg);\n      transform-origin: left top;\n    }\n    &:after {\n      content: \"\";\n      height: 14px;\n      background: rgba(0, 0, 0, 0.2);\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      transform: rotate(-60deg);\n      transform-origin: right top;\n    }\n  }\n`;\n\nfunction Table() {\n  return (\n    <TableStyled>\n      <span className=\"line\"></span>\n      <Token name=\"rock\" />\n      <Token name=\"scissors\" />\n      <Token name=\"paper\" />\n    </TableStyled>\n  );\n}\n\nexport default Table;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ButtonStyled = styled.div`\n  display: inline-flex;\n  border: 1px solid white;\n  border-radius: 0.5em;\n  min-width: 128px;\n  padding: 0.7em;\n  box-sizing: border-radius;\n  justify-content: center;\n  cursor: pointer;\n  text-transform: uppercase;\n  letter-spacing: 2.5px;\n`;\n\nfunction Button({ ...props }) {\n  return <ButtonStyled {...props}>Rules</ButtonStyled>;\n}\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"./button\";\n\nconst RulesStyled = styled.div`\n  text-align: center;\n  .close-button {\n    margin-top: 2em;\n  }\n  .rules-overlay {\n    background: white;\n    padding: 4em 0;\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 2;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-direction: column;\n    h2 {\n      color: #384262;\n      text-transform: uppercase;\n      font-weight: 700;\n      font-family: Arial, Helvetica, sans-serif;\n      letter-spacing: -2px;\n      margin-bottom: 1em;\n    }\n  }\n`;\n\nfunction Rules() {\n  const [visible, setVisible] = useState(false);\n\n  function handleToggleClick() {\n    setVisible(!visible);\n  }\n  return (\n    <RulesStyled>\n      {visible && (\n        <div className=\"rules-overlay\">\n          <h2>Rules</h2>\n          <img src=\"./images/image-rules.svg\" alt=\"Rules Games  \"></img>\n          <img\n            className=\"close-button\"\n            onClick={handleToggleClick}\n            src=\"./images/icon-close.svg\"\n            alt=\"Close the game\"\n          ></img>\n        </div>\n      )}\n      <Button onClick={handleToggleClick} />\n    </RulesStyled>\n  );\n}\n\nexport default Rules;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./header\";\nimport Wrapper from \"./wrapper\";\nimport styled from \"styled-components\";\nimport Table from \"./table\";\nimport Rules from \"./rules\";\n\nconst AppStyled = styled.main`\n  background-image: radial-gradient(circle at top, #1f3757 20%, #131537 100%);\n  color: white;\n  body {\n    font-family: \"Barlow Semi Condensed\", sans-serif;\n  }\n  .app-content {\n    padding: 2em;\n    min-height: 100vh;\n    display: flex;\n    box-sizing: border-box;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n`;\n\nfunction App() {\n  return (\n    <AppStyled>\n      <Wrapper>\n        <div className=\"app-content\">\n          <Header />\n          <Table />\n          <Rules />\n        </div>\n      </Wrapper>\n    </AppStyled>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}